<?xml version="1.0"?>
<!DOCTYPE ccxml PUBLIC '-//W3C/DTD CCXML 1.0//EN' "http://www.w3.org/TR/ccxml/ccxml.dtd">
<ccxml version="1.0">
    <!-- Last Modified 07/22/2011
       *   @Name	page.ccxml
       *   @Desc	This script handles the group paging logic -->

    <!-- Values passed in from other ccxml -->
    <var name="local"/>
    <var name="remote"/>
    <var name="connectionid"/>
    <var name="importedValue"/>

    <!-- Global Vars -->
    <var name="ANI" expr="''"/>         <!-- ANI. Origination ID of current call -->
    <var name="DNIS" expr="''"/>        <!-- DNIS. Destination ID -->
    <var name="tmpANI" expr="''"/>
    <var name="tmpDNIS" expr="''"/>
    <var name="orgList" expr="''"/>
    <var name="orgIndex" expr="0"/>     <!-- Organization Index. Index used to loop through organization phone list -->
    <var name="inVXML" expr="'n'"/>     <!-- In VXML. Determines if this session is currently running a vxml dialog -->
    <var name="dialogID" expr="''"/>    <!-- Dialog ID. Stores value of last VXML dialog that was started -->
    <var name="LIB_PATH" expr="''"/>    <!-- Lib Path. Directory for lib files -->
    <var name="ibconnid" expr="''"/>    <!-- Inbound connection ID -->
    <var name="state" expr="'idle'"/>   <!-- State. Used to track which state a transition is in -->
    <var name="pageMaxID" expr="''"/>   <!-- Page Max ID. ID of delayed event that terminates a group page connection -->
    <var name="phoneType" expr="''"/>
    <var name="TRANS_PATH" expr="''"/>  <!-- Transaction Path. Directory for transaction files -->
    <var name="clientList" expr="''"/>  <!-- Client List. Comma delimited list of client names -->
    <var name="clientIndex" expr="0"/>  <!-- Client Index. Index used to loop through client list -->
    <var name="LINE_NUMBER" expr="''"/>
    <var name="EXT_PREFIX" expr="'ext'"/>
    <var name="EXT_SUFFIX" expr="'@iipbx'"/>
    <var name="callResult" expr="'Broadcast Failed'"/>

    <!-- Constants -->
    <var name="phoneType" expr="'spa941.'"/>
    <var name="EXT_LENGTH" expr="'4'"/>
    <var name="callType" expr="'page'"/>
    <var name="PAGE_MAX_TIME" expr="'30s'"/>                    <!-- Max number of seconds allowed for a page -->
    <var name="SB_PATH" expr="'/interact/apps/spotbuild/'"/>    <!-- Base directory for Spotbuild -->
    <var name="PBX_PATH" expr="SB_PATH+'ippbx/'"/>              <!-- Base directory for PBX application -->
    <var name="APP_PATH" expr="SB_PATH+'broadcast/'"/>          <!-- Base directory for Broadcast application -->
    <var name="TRANS_PATH" expr="PBX_PATH+'transactions/'"/>    <!-- Direcotry for transaction files -->

    <script src="file:/interact/apps/spotbuild/lib/js/lib.js"/>    <!-- Location of Java script file -->

    <eventprocessor statevariable="state">  <!-- Here is where executable code begins -->
        <transition state="idle" event="ccxml.loaded" name="evt">
            <!-- Load ccxml document. Set variables -->
            <log>INFO: Entered [ccxml.loaded] with state [<value expr="state"/>]</log>
            <assign name="AUDIO_PATH" expr="PBX_PATH+'audio/'"/>
            <assign name="LIB_PATH" expr="SB_PATH+'lib/vxml/'"/>
            <assign name="TRANS_PATH" expr="PBX_PATH+'transactions/'"/>
            <assign name="state" expr="'loaded'"/>
            <assign name="ibconnid" expr="connectionid"/>   <!-- Get connection id for incoming call -->
	    	<assign name="ANI" expr="iiUnescape(remote)"/>  <!-- Get origin of incoming call -->
	    	<assign name="DNIS" expr="iiUnescape(local)"/>  <!-- Get destination of incoming call -->
	    	<assign name="tmpDNIS" expr="getnum(DNIS)"/>
            <assign name="tmpANI" expr="getnum(ANI)"/>
       	    <assign name="EXT_LENGTH" expr="getJsonVal(importedValue, 'EXT_LENGTH')"/>
       	    <assign name="EXT_SUFFIX" expr="getJsonVal(importedValue, 'EXT_SUFFIX')"/>
            <assign name="EXT_PREFIX" expr="getJsonVal(importedValue, 'EXT_PREFIX')"/>
            <assign name="LINE_NUMBER" expr="getNextElement(0,session.id,'.')"/>
            <log>INFO: APP Path [<value expr="APP_PATH"/>]</log>
            <log>INFO: Origination [<value expr="ANI"/>]</log>
            <send data="'listclients'" targettype="'x-iievent'" target="'iisip'"/>
        </transition>

        <transition event="sipclientlist" name="evt">
            <!-- Our request for information on registered sip clients has triggered this response. 
            We'll extract the list of clients and also a count. Then, we'll get a list of all phones
            belonging to this specific organization. -->
            <log>INFO: Entered [sipclientlist] with state [<value expr="state"/>]</log>
            <assign name="clientList" expr="evt.clients"/>
            <assign name="state" expr="'getList'"/>
            <dialogstart src="'file:'+APP_PATH+'getExtensionList.vxml'" namelist="ANI importedValue"/>
        </transition>

        <transition state="getList" event="dialog.exit" name="evt">
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <assign name="inVXML" expr="'n'"/>
            <assign name="orgList" expr="evt.values.result"/>
            <if cond="orgList.length &gt; 0">
                <assign name="state" expr="'paging'"/>
                <send data="'dialog.user.call'" target="session.id"/>
            <else/>
                <log>INFO: No phones to page.</log>
                <send data="'dialog.user.endCall'" target="session.id" />
            </if>
        </transition>

        <transition event="dialog.user.call" name="evt">
            <!-- This transition handles paging all phones. We'll use the auto answer syntax to call each phone.
            WARNING: The auto answer syntax is unique per client type. May have to set up logic in the future that
            works with different clients -->
            <log>INFO: Entered [dialog.user.call] with state [<value expr="state"/>]</log>
            <var name="dest" expr="getNextElement(orgIndex,orgList,'|')"/>
            <if cond="((dest != '-1') &amp;&amp; (dest.length &gt; 0))">  <!-- Found a client to call -->
                <assign name="dest" expr="EXT_PREFIX + dest"/>
                <if cond="(inString(dest,clientList,','))">
                    <createcall dest="'sip:aa.' + phoneType + dest + EXT_SUFFIX" callerid="ANI" timeout="'1s'"/>
                </if>
                <assign name="orgIndex" expr="orgIndex + 1"/>
                <send data="'dialog.user.call'" target="session.id"/>
            <else/> <!-- No more clients to call -->
                <var name="II_SB_repeat" expr="'n'"/>
                <var name="II_SB_interval" expr="''"/> <!-- Number of milliseconds repeat -->
                <assign name="state" expr="'paging'"/>
                <var name="II_SB_promptID" expr="AUDIO_PATH+'pageBeep.00.wav'"/> <!-- Play beep to caller -->
                <dialogstart src="'file:'+LIB_PATH+'audioPlayBack.vxml'" namelist="II_SB_promptID II_SB_repeat II_SB_interval"/>
            </if>
        </transition>


        <transition state="paging" event="connection.connected" name="evt">
            <!-- Every client we call we be joined to the caller for paging -->
	        <join id2="ibconnid" id1="evt.connectionid" duplex="'half'"/>
        </transition>

	    <transition state="paging" event="connection.failed">
            <!-- Looks like one of the clients we called was unable to connect. We'll ignore this -->
            <log>INFO: Entered [connection.failed] with state [<value expr="state"/>]</log>
        </transition>

        <transition state="paging" event="dialog.exit" name="evt">
            <!-- We are ready to begin paging. KLUDGE: One unique thing we're doing here is to send a delayed 
            event that ends the group page functionality. We're doing this to prevent and endless group page;
            since paging will cause every phone to auto answer -->
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <assign name="inVXML" expr="'n'"/>
            <log target="status">Paging from [<value expr="tmpANI"/>]</log>
            <send data="'dialog.user.endPage'" target="session.id" delay="PAGE_MAX_TIME" sendid="pageMaxID"/>
        </transition>

	    <transition state="paging" event="connection.disconnected" name="evt" cond="evt.connectionid==ibconnid">
            <!-- We got a disconnect event. We're only interested in handling the caller's disconnect. We need
            to toggle the callers extension to inactive. -->
            <log>INFO: Entered [connection.disconnected] with state [<value expr="state"/>]</log>
            <cancel sendid="pageMaxID"/>
            <assign name="callResult" expr="'Broadcast Successful'"/>
            <send data="'dialog.user.updateDB'" target="session.id"/>
        </transition>

        <transition event="dialog.user.updateDB" name="evt">
            <!-- Here we delete the caller's information from the db -->
            <log>INFO: Entered [dialog.user.updateDB] with state [<value expr="state"/>]</log>
            <assign name="state" expr="'endCall'"/>
            <var name="flag" expr="'dltList'"/>
            <var name="record" expr="ibconnid + '|' + tmpANI"/>
   	   		<dialogstart src="'file:'+TRANS_PATH+'dbCall.vxml'" namelist="flag record EXT_LENGTH"/>
        </transition>

        <transition state="endCall failed error" event="dialog.exit" name="evt">
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <assign name="inVXML" expr="'n'"/>
            <if cond="((state == failed) || (state == error))">
                <send data="'dialog.user.updateDB'" target="session.id"/>
            <else/>
                <send data="'dialog.user.endCall'" target="session.id" />
            </if>
        </transition>

	    <transition event="dialog.user.endPage">
            <!-- If we got this event, it means that the caller has exceeded the max time allowed
            for paging. Let's end the call -->
            <log>INFO: Entered [dialog.user.endPage] with state [<value expr="state"/>]</log>
            <send data="'dialog.user.updateDB'" target="session.id"/>
	    </transition>

        <transition event="error.*" name="evt">
            <!-- Use catch all error for now -->
            <log>ERROR: Entered [Error*] with state [<value expr="state"/>]</log>
            <log>INFO: Reason [<value expr="evt.reason"/>]</log>
            <var name="logText" expr="'page.ccxml: Global error catch. ANI ['+ tmpANI +']. Reason ['+ evt.reason +']'"/>
            <assign name="logText" expr="writeLog('BROADCAST',LINE_NUMBER,logText)"/>
            <assign name="state" expr="'error'"/>
            <dialogstart src="'file:' + PBX_PATH + 'writeExceptionLog.vxml'" namelist="logText"/>
        </transition>

        <transition event="fetch.done" name="evt">
            <log>INFO: Fetched document [<value expr="evt.uri"/>]</log>
            <goto fetchid="evt.fetchid" />
        </transition>

        <transition event="dialog.user.endCall" name="evt">
            <!-- Exit CCXML session -->
            <log>INFO: Entered [dialog.user.endCall] with state [<value expr="state"/>]</log>
            <var name="endTime" expr="getTimeStamp(3)"/>
            <var name="startTime" expr="getJsonVal(importedValue, 'sysAccessTime')"/>
            <assign name="APP_PATH" expr="SB_PATH+'ippbx/'"/>
            <fetch next="'file:' + PBX_PATH + 'cdr.ccxml'" namelist="APP_PATH DNIS ANI startTime endTime callResult callType importedValue"/>
        </transition>

	</eventprocessor>
</ccxml>
