<?xml version="1.0"?>
<!-- Load root.vxml which contains global variables and reference to javascript library file -->
<vxml version="2.0" application="file:/interact/apps/spotbuild/listen_conference/root.vxml"> <!--  Set location of root document -->
    <!-- Last Modified 10/20/2009
       *   @Name   decision.vxml
       *   @Desc   Allows a developer use logical operators
	   *		   to control application flow -->
	<!-- Operators
	    =       :Equals                 ex - =,3,getInput
	    !       :Not Equal              ex - !,3,getInput
	    gt      :Greater then           ex - gt,3,getInput
	    lt      :Less Then              ex - lt,3,getInput
	    l=      :Length Equals          ex - l=,10,getInput
	    l!      :Lenght Does not Equal  ex - l!,2,getInput
	    llt     :Length is Less Then    ex - llt,8,getInput
	    lgt     :Length is Greater Then ex - lgt,1,getInput
	    else    :Else                   ex - else,endCall	-->

    <var name="II_SB_expList" expr="'=,'+'true'+',134-5|else,90-64'"/>	<!-- List of expression to be evaluated -->
    <var name="II_SB_operand1" expr="isAdmin"/>   			<!-- User defined value to be used as an operand in the expression -->
    <var name="II_SB_operand2" expr="''"/>						<!-- Second operand used in the expression -->
    <var name="II_SB_operator" expr="''"/>						<!-- Operator used in expression -->
    <var name="II_SB_index" expr="0"/>							<!-- Index used to loop through expression list -->
    <var name="II_SB_expression" expr="''"/>					<!-- Current expression to be evaluated -->
    <var name="II_SB_nextOpt" expr="''"/>						<!-- Next option to take if expression evaluates to true -->
	<var name="II_SB_result" expr="'false'"/>					<!-- Indicates when an expression evalutes to true -->

	<form id="beginDocument">
		<block>
    	    <log target="status">Is Admin</log>
			<log>INFO: Entered decision.vxml [116-52]</log>
            <log>INFO: List of expression(s) [<value expr="II_SB_expList"/>]</log>
			<goto next="#getExpression"/>
		</block>
	</form>

    <form id="getExpression">
    	<!-- Split off pipe delimited expression list into individual expressions.
			 For each expression, get the operation, operand and next option -->
        <block>
            <log>INFO: Entered getExpression</log>
            <log>INFO: Index [<value expr="II_SB_index"/>]</log>
            <assign name="II_SB_expression" expr="getNextElement(II_SB_index, II_SB_expList, '|')"/>
            <log>INFO: Current expression [<value expr="II_SB_expression"/>]</log>
            <if cond="II_SB_expression != '-1'"> <!-- Check that we're not at the end of the list -->
                <assign name="II_SB_operator" expr="getNextElement('0', II_SB_expression, ',')"/>
	            <if cond="II_SB_operator != 'else'"> <!-- If the first item of the expression is not an 'else', then grab the operation, operand and next option -->
		            <log>INFO: Operand 1 [<value expr="II_SB_operand1"/>]</log>
		            <log>INFO: Operator [<value expr="II_SB_operator"/>]</log>
	                <assign name="II_SB_operand2" expr="getNextElement('1', II_SB_expression, ',')"/>
	                <log>INFO: Operand 2 [<value expr="II_SB_operand2"/>]</log>
	                <assign name="II_SB_nextOpt" expr="getNextElement('2', II_SB_expression, ',')"/>
					<goto next="#evalExpression"/>
				<else/>	<!-- If first item is an else, then go to the next option -->
	                <assign name="II_SB_nextOpt" expr="getNextElement('1', II_SB_expression, ',')"/>
					<log>INFO: Taking [else] option</log>
	                <log>INFO: Next option [<value expr="II_SB_nextOpt"/>.vxml]</log>
					<goto expr="'file:' + II_SB_APP_PATH + II_SB_nextOpt + '.vxml'"/>
				</if>
            <else/>
				<!-- We shouldn't hit this block of code. When using the decision template, 
					 an 'else' operator should always be used; meaning we would always be
					 in the code block above. If we are in here, we need to end the call since
					 we have no information on how to proceed. -->
	            <log>ERROR: Unable to evaluate expression(s)</log>
                <assign name="II_SB_status" expr="'endCall'"/>
                <goto next="#exit"/>
            </if>
		</block>
	</form>

	<form id="evalExpression">
		<!-- Identify which operation user wants and evalute the expression. 
			 If it returns 'true', use next option from that expression. Otherwise,
			 try next expression. -->
		<block>
			<log>INFO: Entered evalExpression</log>
            <if cond="((II_SB_operator == '=') &amp;&amp; (II_SB_operand1 == II_SB_operand2))">
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == 'lt') &amp;&amp; (II_SB_operand1 &lt; II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == 'gt') &amp;&amp; (II_SB_operand1 &gt; II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == '!') &amp;&amp; (II_SB_operand1 != II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == 'l=') &amp;&amp; (II_SB_operand1.length == II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == 'llt') &amp;&amp; (II_SB_operand1.length &lt; II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == 'lgt') &amp;&amp; (II_SB_operand1.length &gt; II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            <elseif cond="((II_SB_operator == 'l!') &amp;&amp; (II_SB_operand1.length != II_SB_operand2))"/>
				<assign name="II_SB_result" expr="'true'"/>
            </if>
			<if cond="II_SB_result == 'true'">
				<log>INFO: Result [True]</log>
                <log>INFO: Next option [<value expr="II_SB_nextOpt"/>.vxml]</log>
				<goto expr="'file:' + II_SB_APP_PATH + II_SB_nextOpt + '.vxml'"/>
			<else/>
				<log>INFO: Result [False]</log>
	            <assign name="II_SB_index" expr="II_SB_index + 1"/>
	            <goto next="#getExpression"/>
			</if>
        </block>
    </form>

    <form id="exit"> <!-- Return to ccxml layer -->
        <block>
            <log>INFO: Return status [<value expr="II_SB_status"/>]</log>
            <log>INFO: Exit to CCXML</log>
            <exit namelist="II_SB_status"/>
        </block>
    </form>
</vxml>
