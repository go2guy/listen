<?xml version="1.0" ?>
<ccxml version="1.0">

    <!-- Last Modified 04/23/2010 -->

    <!--
      /**
       *   @Name   create-session.ccxml
       *   @Desc   Creates a ccxml session.
       */
    -->

    <!-- Define variables -->
    <var name="II_SB_status"/>
    <var name="II_SB_NEXT_OPTION"/>
    <var name="II_SB_remote"/>
    <var name="II_SB_local"/>
    <var name="II_SB_originator"/>
    <var name="II_SB_protocol"/>
    <var name="II_SB_connectionID"/>
    <var name="II_SB_type"/>
    <var name="II_SB_CODE_DIR"/>
    <var name="II_SB_BASE_DIR"/>
    <var name="II_SB_ibcallid"/>
    <var name="II_SB_obcallid"/>
    <var name="II_SB_confid"/>
    <var name="II_SB_passValues"/>
    <var name="II_SB_VXML_LIB"/>
    <var name="II_SB_projectSource"/>

    <!-- Global variables -->
    <var name="II_SB_state" expr="'idle'"/>   <!-- state. This variable holds the CCXML dialog state -->    
    <var name="II_SB_dialogid" expr="''"/>    <!-- dialogid. Contains the ID for the last vxml dialog that was started -->
    <var name="II_SB_sessionID" expr="''"/>   <!-- sessionID. Contains the ID of the ccxml session -->
    <var name="II_SB_indialog" expr="'false'"/>
    <var name="II_SB_nxtOpt" expr="''"/>
    <var name="II_SB_newNxtOpt" expr="''"/>
    <var name="II_SB_oldNxtOpt" expr="''"/>
    <var name="II_SB_errCreateOpt" expr="''"/>    <!--  Next option if a create attempt fails -->
    <var name="II_SB_errMoveOpt" expr="''"/>       <!--  Next option if a move attempt fails -->
    <var name="II_SB_whichID" expr="''"/>

	<!-- Disconnect variables -->
	<var name="II_SB_discID" expr="''"/>			<!-- Contains the connection id of party that triggered connection.disconnected event -->
	<var name="II_SB_discReason" expr="''"/>		<!-- Contains platform specific reason for disconnect -->
	<var name="II_SB_discOriginator" expr="''"/>	<!-- Identifies party that triggered connection.disconnected event -->

    <!-- load javascript library -->
    <script src="file:/interact/apps/spotbuild/lib/js/lib.js"></script>

    <!-- Begin executable code -->
    <eventprocessor statevariable="II_SB_state">

        <!-- starts the conference -->
	    <transition state="idle" event="ccxml.loaded" name="evt">
            <log>INFO: Entered create-session.ccxml [116-20]</log>
            <log>INFO: transition event [ccxml.loaded] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_sessionID" expr="evt.sessionid"/>
            <assign name="II_SB_oldNxtOpt" expr="getNextElement(0,II_SB_passValues,'|')"/>
            <assign name="II_SB_newNxtOpt" expr="getNextElement(1,II_SB_passValues,'|')"/>
            <assign name="II_SB_errCreateOpt" expr="getNextElement(2,II_SB_passValues,'|')"/>
            <assign name="II_SB_errMoveOpt" expr="getNextElement(3,II_SB_passValues,'|')"/>
            <assign name="II_SB_whichID" expr="getNextElement(4,II_SB_passValues,'|')"/>
       	    <assign name="II_SB_state" expr="'loaded'"/>
            <log>INFO: Old session next option [<value expr="II_SB_oldNxtOpt"/>]</log>
            <log>INFO: New session next option [<value expr="II_SB_newNxtOpt"/>]</log>
            <log>INFO: Create session error next option [<value expr="II_SB_errCreateOpt"/>]</log>
            <log>INFO: Move session error next option [<value expr="II_SB_errMoveOpt"/>]</log>
            <log>INFO: Specified connection ID [<value expr="II_SB_whichID"/>]</log>
            <send data="'dialog.user.getVariables'" target="II_SB_sessionID"/>
        </transition>

        <transition event="dialog.user.getVariables">
			<log>INFO: transition event [dialog.user.getVariables] state [<value expr="II_SB_state"/>]</log>
            <log>INFO: Get variables from [<value expr="'116-20.vxml'"/>]</log>
            <assign name="II_SB_state" expr="'getVariables'"/>
            <var name="II_SB_fromCCXML" expr="'true'"/>
            <dialogstart src="'file:' + II_SB_CODE_DIR + '116-20.vxml'" namelist="II_SB_fromCCXML"/>
        </transition>

        <transition state="getVariables" event="dialog.exit" name="evt">
            <log>INFO: transition event [dialog.exit] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_indialog" expr="'false'"/>
			<var name="SB_UV_audioURL" expr="evt.values.audioURL"/>
        
            <assign name="II_SB_state" expr="'createSession'"/>
	        <assign name="II_SB_status" expr="'createSession'"/>
    		<createccxml sessionid="II_SB_startedSID" next="'file:'+II_SB_CODE_DIR+'begin.ccxml'" namelist="II_SB_status II_SB_type II_SB_newNxtOpt II_SB_whichID II_SB_VXML_LIB II_SB_projectSource SB_UV_audioURL"/>
	    </transition>

	    <!-- Catch ccxml.created event -->
	    <transition state="createSession" event="ccxml.created" name="evt" cond="(II_SB_whichID == II_SB_obcallid) &amp;&amp; (II_SB_obcallid.length != 0)">
		    <log>INFO: transition event [ccxml.created] state [<value expr="II_SB_state"/>]</log>
	        <log>INFO: startedSID [<value expr="II_SB_startedSID"/>]</log>
		    <assign name="II_SB_state" expr="'moveID'"/>
	        <if cond="II_SB_startedSID != -1">
    		    <!-- successful create. Move specified connection id to new session -->
    		    <move sessionid="II_SB_startedSID" source="II_SB_whichID"/>
	        <else/>
		        <!-- Create failed -->
		        <log>ERROR: CreateCCXML failed</log>
                <assign name="II_SB_nxtOpt" expr="II_SB_errCreateOpt"/>
                <send data="'dialog.user.nextVXML'" target="II_SB_sessionID"/>
	        </if>
	    </transition>

	    <transition state="createSession" event="ccxml.created" name="evt">
		    <log>INFO: transition event [ccxml.created] state [<value expr="II_SB_state"/>]</log>
	        <log>INFO: startedSID [<value expr="II_SB_startedSID"/>]</log>
		    <assign name="II_SB_state" expr="'moveID'"/>
            <assign name="II_SB_nxtOpt" expr="II_SB_oldNxtOpt"/>
            <send data="'dialog.user.nextVXML'" target="II_SB_sessionID"/>
	    </transition>

    	<!-- Catch move.successful event -->
	    <transition state="moveID" event="move.successful">
			<log>INFO: transition event [move.successful] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_obcallid" expr="''"/>
            <assign name="II_SB_nxtOpt" expr="II_SB_oldNxtOpt"/>
            <send data="'dialog.user.nextVXML'" target="II_SB_sessionID"/>
        </transition>

        <transition event="fetch.done" name="evt">
			<log>INFO: transition event [fetch.done] state [<value expr="II_SB_state"/>]</log>
            <goto fetchid="evt.fetchid"/> <!-- Go to ccxml document -->
        </transition>

        <!-- Catch for the disconnect of the obcallid -->
        <transition event="connection.disconnected" name="evt" cond="evt.connectionid == II_SB_obcallid">
			<log>INFO: transition event [connection.disconnected] state [<value expr="II_SB_state"/>]</log>
            <log>INFO: Connectionid [<value expr="II_SB_obcallid"/>]</log>
            <assign name="II_SB_obcallid" expr="''"/>
        </transition>

		<transition event="connection.disconnected" name="evt" cond="evt.connectionid == II_SB_connectionID">
			<log>INFO: transition event [connection.DISCONNECTED] state [<value expr="state"/>]</log>
            <assign name="II_SB_ibcallid" expr="''"/>
			<assign name="II_SB_discID" expr="evt.connectionid"/>
			<assign name="II_SB_discReason" expr="evt.reason"/>
			<assign name="II_SB_discOriginator" expr="evt.connection.originator"/>
            <send data="'dialog.user.hangup'" target="II_SB_sessionID"/>
        </transition>

		<transition event="dialog.user.hangup" name="evt">
			<log>INFO: transition event [dialog.user.hangup] state [<value expr="II_SB_state"/>]</log>
            <var name="II_SB_file1" expr="II_SB_CODE_DIR + 'hang-up.vxml'"/>
            <var name="II_SB_file2" expr="''"/>
            <var name="II_SB_fileOprtn" expr="'stat'"/>
			<assign name="II_SB_state" expr="'hangUp'"/>
            <dialogstart src="'file:' + II_SB_BASE_DIR + 'lib/vxml/fileUtil.vxml'" namelist="II_SB_file1 II_SB_file2 II_SB_fileOprtn"/> <!-- Check for Hangup logic -->
		</transition>

        <!-- Return from vxml dialog -->
        <transition state="hangUp" event="dialog.exit" name="evt">
            <log>INFO: transition event [dialog.exit] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_state" expr="'endCall'"/>
            <assign name="II_SB_indialog" expr="'false'"/>
            <if cond="evt.values.II_SB_status != 'Failure'">
                <if cond="evt.values.II_SB_fileSize != ''">
                    <log>INFO: Found hang up node</log>
                    <dialogstart src="'file:' + II_SB_CODE_DIR + 'hang-up.vxml'" namelist="II_SB_discID II_SB_discReason II_SB_discOriginator"/>
                <else/>
                    <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
                </if>
            <else/>
                <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
            </if>
        </transition>

    	<!-- This option returns the call to the VXML so that whatever happens, this is the next transition -->
        <transition event="dialog.user.nextVXML">
			<log>INFO: transition event [dialog.user.nextVXML] state [<value expr="II_SB_state"/>]</log>
            <log>INFO: Going to Next VXML</log>
            <log>INFO: nxtOpt [<value expr="II_SB_nxtOpt"/>]</log>
            <if cond="II_SB_nxtOpt == ''|| II_SB_nxtOpt == undefined">
                <assign name="II_SB_state" expr="'endCall'"/>
                <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
            <else/>
                <assign name="II_SB_state" expr="'nextOptionRun'"/>
                <if cond="II_SB_ibcallid != ''">
                    <join id1="II_SB_ibcallid" id2="'VXML_CHANNEL'"/>
                </if>
                <dialogstart src="'file:' + II_SB_CODE_DIR + II_SB_nxtOpt + '.vxml'"/>
            </if>
        </transition>

        <!-- Return from vxml dialog -->
        <transition state="nextOptionRun endCall" event="dialog.exit" name="evt">
            <log>INFO: transition event [dialog.exit] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_indialog" expr="'false'"/>
            <assign name="II_SB_status" expr="evt.values.II_SB_status"/>
      		<assign name="II_SB_NEXT_OPTION" expr="evt.values.II_SB_nextOpt"/>
            <log>INFO: status to check on the dialog.exit - <value expr="II_SB_status"/></log>
            <if cond="(II_SB_status == 'endCall') || (II_SB_status == 'hangup') || (II_SB_state == 'endCall')">
                <log>INFO: End call</log>
                <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
            <elseif cond="II_SB_status == 'outDialCheck'"/>
                <log>INFO: Checking Out Dial status</log>
                <var name="II_SB_fromCCXML" expr="'true'"/>
                <dialogstart src="'file:' + II_SB_CODE_DIR + II_SB_NEXT_OPTION + '.vxml'" namelist="II_SB_obcallid II_SB_fromCCXML"/>
            <elseif cond="II_SB_status == 'transfer'"/>
                <log>INFO: Transfering to a new program</log>
                <var name="II_SB_transfer" expr="'yes'"/>
                <assign name="II_SB_projectSource" expr="'listen_conference'"/>
				<if cond="II_SB_NEXT_OPTION != ''">
					<fetch next="'file:' + II_SB_BASE_DIR + II_SB_NEXT_OPTION + '/begin.ccxml'" namelist="II_SB_VXML_LIB II_SB_status II_SB_local II_SB_remote II_SB_originator II_SB_protocol II_SB_connectionID II_SB_type II_SB_ibcallid II_SB_transfer II_SB_projectSource II_SB_obcallid"/>
				<else/>
					<assign name="II_SB_state" expr="'endCall'"/>
					<send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
				</if>
            <else/>
		        <assign name="II_SB_passValues" expr="evt.values.II_SB_returnValues"/>
        		<log>INFO: II_SB_NEXT_OPTION = '<value expr="II_SB_NEXT_OPTION"/>'</log>
        		<log>INFO: II_SB_passValues = '<value expr="II_SB_passValues"/>'</log>
        		<if cond="II_SB_NEXT_OPTION != ''">
					<fetch next="'file:' + II_SB_CODE_DIR + II_SB_NEXT_OPTION + '.ccxml'" namelist="II_SB_VXML_LIB II_SB_status II_SB_NEXT_OPTION II_SB_local II_SB_remote II_SB_originator II_SB_protocol II_SB_connectionID II_SB_type II_SB_CODE_DIR II_SB_BASE_DIR II_SB_ibcallid confid II_SB_passValues II_SB_projectSource II_SB_obcallid"/>
				<else/>
					<assign name="II_SB_state" expr="'endCall'"/>
					<send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
				</if>
            </if>
        </transition>

        <!-- Custom Event Code -->
        <transition event="dialog.user.customEvent" name="evt">
            <log>INFO: transition event [dialog.user.customEvent] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_state" expr="'customEvent'"/>
            <assign name="II_SB_passValues" expr="evt.II_SB_eventToPass + '|' + evt.II_SB_valueToPass"/>
            <if cond="II_SB_indialog == 'true'">
                <send data="'dialog.user.termDialog'" target="II_SB_sessionID"/>
            <else/>
              	<assign name="II_SB_state" expr="'nextOptionRun'"/>
	        	<dialogstart src="'file:' + II_SB_CODE_DIR + 'customEvent.vxml'" namelist="II_SB_ibcallid II_SB_passValues"/>
            </if>
        </transition>

        <transition state="customEvent" event="dialog.exit">
            <log>INFO: transition event [dialog.exit] state [<value expr="II_SB_state"/>]</log>
            <var name="II_SB_indialog" expr="'false'"/>
          	<assign name="II_SB_state" expr="'nextOptionRun'"/>
	    	<dialogstart src="'file:' + II_SB_CODE_DIR + 'customEvent.vxml'" namelist="II_SB_ibcallid II_SB_passValues"/>
        </transition>

    	<!-- Terminates the currently running dialog. -->
	    <transition event="dialog.user.termDialog">
            <log>INFO: transition event [dialog.user.termDialog] state [<value expr="II_SB_state"/>]</log>
            <log>INFO: Terminating dialog [ <value expr="II_SB_dialogID" /> ]</log>
            <dialogterminate dialogid="II_SB_dialogID"/>
        </transition>

        <!-- Started VXML dialog -->
        <transition event="dialog.started" name="evt">
			<log>INFO: transition event [dialog.started] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_indialog" expr="'true'"/>
            <assign name="II_SB_dialogID" expr="evt.dialogid"/>
            <log>INFO: dialogID in the dialog.started - <value expr="II_SB_dialogID"/></log>
        </transition>

        <!-- catch dialog.exit -->
        <transition event="dialog.exit" name="evt">
			<log>INFO: transition event [dialog.exit] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_state" expr="'endCall'"/>
            <assign name="II_SB_indialog" expr="'false'"/>
            <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
        </transition>

        <!-- Catch dialog not started -->
        <transition event="error.dialog.notstarted" name="evt">
            <log>INFO: transition event [<value expr="evt.name"/>] state [<value expr="II_SB_state"/>]</log>
            <log>ERROR: Unable to start Dialog. REASON [<value expr="evt.reason"/>]</log>
            <assign name="II_SB_state" expr="'endCall'"/>
            <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
        </transition>

        <!-- Catch fetch error -->
        <transition event="error.fetch" name="evt">
            <log>INFO: transition event [<value expr="evt.name"/>] state [<value expr="II_SB_state"/>]</log>
            <log>ERROR: Unable to fetch document. REASON [<value expr="evt.reason"/>]</log>            
            <assign name="II_SB_state" expr="'endCall'"/>
            <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
        </transition>

        <!-- Catch errors -->
        <transition event="error.dialog.semantic" name="evt">
            <log>INFO: transition event [error.dialog.semantic] state [<value expr="II_SB_state"/>]</log>
            <assign name="II_SB_state" expr="'endCall'"/>
            <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
        </transition>

        <transition event="err*" name="errEV">
            <log>INFO: transition event [err*] state [<value expr="II_SB_state"/>]</log>
            <send data="'dialog.user.endCall'" target="II_SB_sessionID"/>
        </transition>

        <!-- Exit ccxml layer -->
        <transition event="dialog.user.endCall">
            <log>INFO: transition event [dialog.user.endCall] state [<value expr="II_SB_state"/>]</log>
            <exit/>
        </transition>

    </eventprocessor>
</ccxml>
