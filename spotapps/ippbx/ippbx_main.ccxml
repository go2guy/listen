<?xml version="1.0"?>
<!DOCTYPE ccxml PUBLIC '-//W3C/DTD CCXML 1.0//EN' "http://www.w3.org/TR/ccxml/ccxml.dtd">
<ccxml version="1.0">
    <!-- Last Modified 08/24/2011
       *   @Name	ippbx_main.ccxml
       *   @Desc	Starting point of the PBX application. This script primarily
                    handles routing an incoming call based on the dialed number -->

    <!-- Exports from Spotbuild project -->
    <var name="II_SB_VXML_LIB"/>        <!-- VXML Lib path -->
    <var name="II_SB_status"/>          <!-- status. This variable is used for application control -->
    <var name="II_SB_local"/>           <!-- Dialed ID -->
    <var name="II_SB_remote"/>          <!-- Origination ID -->
    <var name="II_SB_originator"/>      <!-- Call originator -->
    <var name="II_SB_protocol"/>        <!-- Call protocol -->
    <var name="II_SB_connectionID"/>    <!-- II_SB_connectionID. Contains the ID of the connection for this call -->
    <var name="II_SB_type"/>            <!-- II_SB_type.Contains the type of call - VOIP, PSTN -->
    <var name="II_SB_ibcallid"/>        <!-- ibcallid. In bound connection id -->
    <var name="II_SB_transfer"/>        <!-- transfer. Determins if this call is a transfer from another program -->
    <var name="II_SB_projectSource"/>   <!-- projectSource. -->
    <var name="II_SB_obcallid"/>        <!-- obcallid. Out bound connection id -->
    <var name="II_SB_CODE_DIR"/>        <!-- CODE_DIR. Application directory under base directory. Contains all code -->
    <var name="II_SB_line"/>            <!-- Line number processing call -->

    <!-- Global Vars -->
    <var name="state" expr="'idle'"/>   <!-- State. Stores the current state of the ccxml session -->
    <var name="ibconnid"/>              <!-- Inbound Connection ID. Contains the connection ID for the inbound caller -->
    <var name="obconnid"/>              <!-- Outbound Connection ID. Contains the connection ID for an outbound call -->
    <var name="ANI" expr="''"/>         <!-- ANI. Origination of inbound call -->
    <var name="DNIS" expr="''"/>        <!-- DNIS. Destination dialed -->
    <var name="tmpANI" expr="''"/>      <!-- ANI -->
    <var name="tmpDNIS" expr="''"/>     <!-- DNIS -->
    <var name="route" expr="''"/>       <!-- Route. Used to route an incoming call to a particular event -->
    <var name="dialogID" expr="''"/>    <!-- Dialog ID. Stores value of last VXML dialog that was started -->
    <var name="inVXML" expr="'n'"/>     <!-- In VXML. Determines if this session is currently running a vxml dialog -->
    <var name="callType"/>              <!-- Call Type. Identifies a call as: service, extension, or external -->
    <var name="importedValue"/>         <!-- Imported Value. Values passed in from Listen application -->
    <var name="remote"/>
    <var name="local"/>
    <var name="LINE_NUMBER" expr="''"/>
    <var name="sessionID" expr="''"/>
    <!-- End global vars -->

    <!-- Constants -->
    <var name="maxTime" expr="0"/>
    <var name="EXT_LENGTH" expr="4"/>   <!-- Extensions are less than four digit numbers -->
    <var name="SB_PATH" expr="'/interact/apps/spotbuild/'"/>    <!-- Base directory for Spotbuild -->
    <var name="APP_PATH" expr="SB_PATH+'ippbx/'"/>              <!-- Base directory for PBX application -->
    <var name="logFile" expr="'file:/interact/logs/exceptionLog'"/>
    <var name="DB_PATH" expr="'http://localhost/ippbx/'"/>

    <script src="file:/interact/apps/spotbuild/lib/js/lib.js"/>

    <eventprocessor statevariable="state">  <!-- Here is where executable code begins -->
        <transition state="idle" event="ccxml.loaded" name="evt">
            <!-- Loaded new ccxml session. Check source (where call originated from) -->
            <log>INFO: Entered [ccxml.loaded] with state [<value expr="state"/>]</log>
            <log>INFO: Event Source [<value expr="evt.eventsource"/>]</log>
            <assign name="ibconnid" expr="connectionid"/>   <!-- Get connection id for incoming call -->
	    	<assign name="ANI" expr="iiUnescape(remote)"/>  <!-- Get origin of incoming call -->
            <assign name="tmpANI" expr="getnum(ANI)"/>
       	    <assign name="EXT_LENGTH" expr="getJsonVal(importedValue, 'EXT_LENGTH')"/>
            <assign name="LINE_NUMBER" expr="getNextElement(0,session.id,'.')"/>
	    	<assign name="DNIS" expr="getJsonVal(importedValue, 'destination')"/> <!-- If call is from attendant or main app, we're trying to use dial logic -->
            <if cond="DNIS.length &gt; 0">
    	    	<assign name="tmpDNIS" expr="DNIS"/>
                <assign name="route" expr="'dialog.user.dial'"/>   <!-- Set route to dial -->
            <else/>
	    	    <assign name="DNIS" expr="iiUnescape(local)"/>  <!-- Get destination of incoming call -->
	    	    <assign name="tmpDNIS" expr="getnum(DNIS)"/>
                <assign name="route" expr="'dialog.user.routeCall'"/>   <!-- Set route to dial -->
            </if>
            <send data="'dialog.user.chk_ANI'" target="session.id"/>
        </transition>

        <transition event="dialog.user.chk_ANI" name="evt">
            <!-- Here, we determine if this call originated internally or externally. -->
            <log>INFO: Entered [dialog.user.chk_ANI] with state [<value expr="state"/>]</log>
            <if cond="tmpANI.length &lt; EXT_LENGTH">  <!-- If this is true, we can assume caller is internal to the pbx. -->
                <!-- We need to set their status in the db as actvie -->
                <var name="id" expr="ibconnid"/>
                <var name="flag" expr="'insert'"/>
                <var name="extension" expr="tmpANI"/>
                <send data="'updateClient'" target="DB_PATH+'activeClients.php'" targettype="'basichttp'" namelist="extension id flag sessionID maxTime"/>
            </if>
            <send data="route" target="session.id" delay="'250ms'"/>
        </transition>

        <transition event="dialog.started" name="evt">
            <!-- Here we save off the ID of the VXML dialog we just started -->
            <log>INFO: Entered [dialog.started] with state [<value expr="state"/>]</log>
            <assign name="inVXML" expr="'y'"/>
            <assign name="dialogID" expr="evt.dialogid"/>
        </transition>

		<transition event="dialog.user.routeCall" name="evt">
            <!-- We need to figure out how to route this call based on what caller dialed -->
            <log>INFO: Entered [dialog.user.routeCall] with state [<value expr="state"/>]</log>
            <log target="status">Routing call...</log>
            <if cond="(tmpDNIS[0]+tmpDNIS[1]) == '#3'"> <!-- Assume caller is trying to use forward service -->
                <send data="'dialog.user.forward'" target="session.id"/>
            <elseif cond="((tmpDNIS[0]+tmpDNIS[1]) == '#9') &amp;&amp; (tmpANI.length &lt; EXT_LENGTH)"/> <!-- Assume caller is trying to pick up a line that's on hold -->
                <send data="'dialog.user.pickUpCall'" target="session.id"/>
            <elseif cond="(tmpDNIS.length &lt; EXT_LENGTH) &amp;&amp; (tmpDNIS[0] != '9')"/>    <!-- Assume this is an internal call between extensions -->
                <assign name="callType" expr="'extension'"/>
                <send data="'dialog.user.dial'" target="session.id"/>
            <elseif cond="tmpANI.length &lt; EXT_LENGTH"/> <!-- Assume this is an external call from an extension -->
                <assign name="callType" expr="'external'"/>
                <send data="'dialog.user.dial'" target="session.id"/>
            <else/> <!-- We've encountered an unusual error, since we couldn't match any known case. End the call -->
                <var name="logText" expr="'ippbx_main.ccxml: Unable to match current call to any ippbx route. ANI ['+ tmpANI +'] DNIS ['+ tmpDNIS + '].'"/>
                <assign name="logText" expr="writeLog('IPPBX',LINE_NUMBER,logText)"/>
                <assign name="state" expr="'error'"/>
                <log target="logFile"><value expr="logText"/></log>
                <send data="'dialog.user.toggleThenEnd'" target="session.id"/>
            </if>
		</transition>

        <transition event="dialog.user.dial" name="evt">
            <!-- Transfer control to dial script -->
            <log>INFO: Entered [dialog.user.dial] with state [<value expr="state"/>]</log>
            <fetch next="'file:'+APP_PATH+'dial.ccxml'" namelist="SB_PATH APP_PATH EXT_LENGTH ibconnid tmpANI tmpDNIS DNIS ANI callType importedValue II_SB_line II_SB_CODE_DIR II_SB_ibcallid II_SB_obcallid II_SB_projectSource II_SB_transfer II_SB_VXML_LIB II_SB_status II_SB_local II_SB_remote II_SB_originator II_SB_protocol II_SB_connectionID II_SB_type"/>
        </transition>

        <transition event="dialog.user.forward" name="evt">
            <!-- Here we determine how to handle the call based on the incoming DNIS -->
            <log>INFO: Entered [dialog.user.forward] with state [<value expr="state"/>]</log>
            <assign name="state" expr="'fwd'"/>
            <var name="fwdInfo" expr="iiSubstr(tmpDNIS,0,3)"/>
            <if cond="((fwdInfo == '#33') || (fwdInfo == '#34'))">
                <!-- Caller attempting to use forward functionality -->
                <dialogstart src="'file:'+APP_PATH+'forward/chkFwdType.vxml'" namelist="fwdInfo tmpANI tmpDNIS importedValue"/>
            <else/>
                <log>ERROR: Unknown code [<value expr="fwdCode"/>]</log>
                <send data="'dialog.user.toggleThenEnd'" target="session.id"/>
            </if>
        </transition>

        <transition event="dialog.user.pickUpCall" name="evt">
            <!-- Here we'll pass control to the transfer hold ccxml script -->
            <log>INFO: Entered [dialog.user.pickUpCall] with state [<value expr="state"/>]</log>
            <fetch next="'file:'+APP_PATH+'transfer/transferHold.ccxml'" namelist="SB_PATH APP_PATH EXT_LENGTH ibconnid tmpANI tmpDNIS DNIS ANI callType importedValue II_SB_line II_SB_CODE_DIR II_SB_ibcallid II_SB_obcallid II_SB_projectSource II_SB_transfer II_SB_VXML_LIB II_SB_status II_SB_local II_SB_remote II_SB_originator II_SB_protocol II_SB_connectionID II_SB_type"/>
        </transition>

        <transition event="connection.disconnected" name="evt">
            <!-- Caller has hung up. If caller is internal to pbx, we need to remove their information from the db -->
            <log>INFO: Entered [connection.disconnected] with state [<value expr="state"/>]</log>
            <log>INFO: Detected hangup</log>
            <if cond="inVXML == 'y'">   <!-- If this is true, we need to terminate the current VXML before doing anything else -->
                <assign name="state" expr="'hangUp'"/>
                <dialogterminate dialogid="dialogID" immediate="true"/>
            <else/>
                <send data="'dialog.user.toggleThenEnd'" target="session.id"/>
            </if>
        </transition>

        <transition state="fwd hangUp error" event="dialog.exit" name="evt">
            <!-- This transition handles the return from a VXML dialog -->
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <assign name="inVXML" expr="'n'"/>
            <assign name="state" expr="'endCall'"/>
            <send data="'dialog.user.toggleThenEnd'" target="session.id"/>
        </transition>

        <transition event="dialog.user.toggleThenEnd" name="evt">
            <!-- This transition handles the return from terminating the VXML session after receiving a hangup -->
            <log>INFO: Entered [dialog.user.toggleThenEnd] with state [<value expr="state"/>]</log>
            <assign name="state" expr="'endCall'"/>
            <if cond="tmpANI.length &lt; EXT_LENGTH">
                <var name="id" expr="ibconnid"/>
                <var name="flag" expr="'delete'"/>
                <var name="extension" expr="tmpANI"/>
                <send data="'updateClient'" target="DB_PATH+'activeClients.php'" targettype="'basichttp'" namelist="extension id flag sessionID maxTime"/>
            </if>
            <send data="'dialog.user.endCall'" target="session.id" delay="'250ms'"/>
        </transition>

        <transition event="dialog.exit" name="evt">
            <!-- This transition handles the return from a VXML dialog -->
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <assign name="inVXML" expr="'n'"/>
            <send data="'dialog.user.endCall'" target="session.id"/>
        </transition>

        <transition event="fetch.done" name="evt">
            <log>INFO: Fetched document [<value expr="evt.uri"/>]</log>
            <goto fetchid="evt.fetchid" />
        </transition>

        <transition event="error.send.failed" name="evt" cond="evt.reason == 200">
            <!-- Ignore this error -->
        </transition>

        <transition event="error.*" name="evt">
            <!-- Use catch all error for now -->
            <log>ERROR: Entered [Error*] with state [<value expr="state"/>]</log>
            <log>INFO: Reason [<value expr="evt.reason"/>]</log>
            <var name="logText" expr="'ippbx_main.ccxml: Global error catch. ANI ['+ tmpANI +'] DNIS ['+ tmpDNIS + ']. Reason [' + evt.reason + ']'"/>
            <assign name="logText" expr="writeLog('IPPBX',LINE_NUMBER,logText)"/>
            <assign name="state" expr="'error'"/>
            <log target="logFile"><value expr="logText"/></log>
            <send data="'dialog.user.toggleThenEnd'" target="session.id"/>
        </transition>

        <!-- End call -->
        <transition event="dialog.user.endCall" name="evt">
            <log>INFO: Entered [dialog.user.endCall] with state [<value expr="state"/>]</log>
            <exit/>
        </transition>
	</eventprocessor>

</ccxml>
