<?xml version="1.0"?>
<vxml version="2.0" application="file:/interact/apps/spotbuild/ippbx/root.vxml">
    <!-- Last Modified: 11/04/2010
         @Name: getUserEntry.vxml
         @Desc: This script handles playing audio files
                and receiving user input. -->

    <property name="termchar" value=""/>    <!-- Default key used to terminate input -->
    <property name="timeout" value="10ms"/> <!-- Default length of time to wait for first user input -->

    <!-- Global variables -->
    <var name="playAudio" expr="'y'"/>      <!-- Determines if an audio file will be played -->
    <var name="userEntry" expr="''"/>       <!-- Stores user input -->
    <var name="promptID" expr="''"/>        <!-- URL of audio file -->
    <var name="fieldLength" expr="''"/>     <!-- Number of digits expected from user. Could also be a two position pipe ('|') 
                                                 separated list. First position is the exact number of digits to match. Second 
                                                 position is the exact digit to be matched (on the first key press) -->
    <var name="DGT_TIMEOUT" expr="''"/>     <!-- Length of time to wait for subsequent user input -->
    <var name="FLD_TERMCHAR" expr="''"/>    <!-- Contains value used to set the termchar property -->
    <var name="FLD_INTERRUPT" expr="''"/>   <!-- Determines if an audio file is interruptible -->
    <var name="FLD_TIMEOUT" expr="''"/>     <!-- Contains value used to set the timeout property -->
    <var name="audioIndex" expr="0"/>       <!-- Index used to loop through prompt list -->
    <var name="tmpFile" expr="''"/>         <!-- Stores name of audio file -->
    <var name="HOT_KEY" expr="''"/>

	<form id="beginDocument">
        <!-- Subdialog inputs -->
        <var name="dgtTimeOut"/>
        <var name="fldLength"/>
        <var name="fldTimeOut"/>
        <var name="fldTermchar"/>
        <var name="interrupt"/>
        <var name="hotKey"/>
        <var name="file"/>
        <var name="fileCheck"/>
		<block>
	        <log>INFO: Entered getUserEntry.vxml</log>
            <!-- Set input values to global variables -->
            <assign name="tmpFile" expr="file"/>    <!-- NOTE: Input file may be pipe ('|') separated list of prompts -->
            <assign name="fieldLength" expr="fldLength"/>   <!-- NOTE: Field length may be pipe ('|') separated list of values -->
            <assign name="DGT_TIMEOUT" expr="dgtTimeOut"/>
            <assign name="FLD_TERMCHAR" expr="fldTermchar"/>
            <assign name="FLD_INTERRUPT" expr="interrupt"/>
            <assign name="FLD_TIMEOUT" expr="fldTimeOut"/>
            <assign name="HOT_KEY" expr="hotKey"/>
  			<goto next="#setBargein"/>
		</block>
	</form>

    <form id="setBargein">
        <!-- Here we use a custom Interact object to set the bargein property which determines if
        the caller is able to enter an key presses -->
        <block>
            <log>INFO: Entered setBargein</log>
        </block>
	    <object name="myBrg" classid="com.iivip.setproperty">
            <param name="PropertyName" value="bargein"/>
            <param name="PropertyValue" expr="FLD_INTERRUPT"/>
            <param name="PropertyScope" value="Document"/>
        </object>
        <block>
			<goto next="#getPrompt"/>
        </block>
    </form>

    <form id="getPrompt">
        <!-- Here, we check the format of the audio file that was passed into the subdialog. A pipe
        ('|') separated list indicates that we need to play multiple prompts. Once we're done playing
        the audio file(s), we'll set the timeout property and wait for the user's key press. Also, if
        an audio file name contains a forward slash ('/'), we'll assume that the name specifies a full
        path. Otherwise, we'll use the default audio path as the location for the file -->
        <block>
            <log>INFO: Entered getPrompt</log>
            <if cond="tmpFile.length == 0">
                <!-- We don't have an audio file name. let's check if we need to wait for a key press -->
                 <goto next="#setTimeout"/>
            <else/>
                <assign name="promptID" expr="getNextElement(audioIndex,tmpFile,'|')"/>
                <assign name="audioIndex" expr="audioIndex + 1"/>
                <if cond="promptID == '-1'">
                     <!-- No more prompts to play. Let's check if we need to wait for a key press -->
                    <goto next="#setTimeout"/>
                <elseif cond="promptID != ''"/> <!-- Found a file name -->
                    <assign name="playAudio" expr="'y'"/>
                    <assign name="gotoForm" expr="'#getPrompt'"/>
                    <var name="whichPath" expr="promptID[0] + promptID[1]"/>
                    <var name="fileName" expr="iiSubstr(promptID, 2 ,promptID.length) + '.' + LANGUAGE_ID + '.' + LANGUAGE_CODE"/>
                    <if cond="whichPath == 'AP'">
                        <assign name="promptID"  expr="AUDIO_PATH + fileName"/> <!-- Audio path -->
                    <elseif cond="whichPath == 'SP'"/>
                        <assign name="promptID"  expr="SYSTEM_PATH + fileName"/> <!-- System path -->
                    <else/>
                        <!-- Assume full path was passed into subdialog -->
                    </if>
                    <log>INFO: Audio file [<value expr="promptID"/>]</log>
			        <goto next="#getEntry"/>
                <else/> <!-- Looks like we've pulled an empty string. Ignore and get next item -->
                    <goto next="#getPrompt"/>
                </if>
            </if>
        </block>
    </form>

    <form id="setTimeout">
        <!-- In this form, we check both the interupt and timeout variables. If both of these are active,
        we need to wait for input from the user. We'll use a custom Interact object to set the timeout property -->
        <block>
            <log>INFO: Entered setTimeout</log>
            <if cond="((FLD_INTERRUPT == 'true') &amp;&amp; (FLD_TIMEOUT.length &gt; 1))">
                <!-- The FLD_TIMOUT variable determines how long the application waits for the first
                user input. If we don't get any input before this timer expires, we'll exit -->
                <assign name="gotoForm" expr="'#exit'"/>
            <else/>
            	<goto next="#exit"/>    <!-- No need to wait for user input -->
            </if>
        </block>
	    <object name="Dgt1" classid="com.iivip.setproperty">    <!-- Use custom object to set the timeout property -->
            <param name="PropertyName" value="timeout"/>
            <param name="PropertyValue" expr="FLD_TIMEOUT"/>
            <param name="PropertyScope" value="Document"/>
        </object>
        <block>
            <assign name="playAudio" expr="'n'"/>   <!-- Turn this flag off, since we're only waiting for input -->
    		<goto next="#getEntry"/>
        </block>
    </form>

    <menu id="getEntry">
        <!-- This menu works in conjunction with the checkEntry form. We can collect a key press
        here and then we'll check to see if we've met the termination rule in the checkEntry. If we
        haven't, we'll come get another key here. -->
        <property name="inputmodes" value="dtmf"/>  <!-- Define input mode as dtmf only -->
        <prompt cond="playAudio=='y'">
            <!-- This condition allows us to play the audio file once but loop over the menu serveral times -->
			<audio expr="promptID"/>
        </prompt>
        <choice dtmf="0" next="#checkEntry"/>
        <choice dtmf="1" next="#checkEntry"/>
        <choice dtmf="2" next="#checkEntry"/>
        <choice dtmf="3" next="#checkEntry"/>
        <choice dtmf="4" next="#checkEntry"/>
        <choice dtmf="5" next="#checkEntry"/>
        <choice dtmf="6" next="#checkEntry"/>
        <choice dtmf="7" next="#checkEntry"/>
        <choice dtmf="8" next="#checkEntry"/>
        <choice dtmf="9" next="#checkEntry"/>
        <choice dtmf="*" next="#checkEntry"/>
        <choice dtmf="#" next="#checkEntry"/>
        <noinput>
            <!-- We did not get any user key press before timer expired. Depending on the value of
            'gotoForm', we may exit or go check if we have any other prompts to play -->
            <goto expr="gotoForm"/>
        </noinput>
        <nomatch>
            <!-- This really shouldn't happen since all possible keys are listed -->
            <goto expr="gotoForm"/>
        </nomatch>
    </menu>

    <form id="checkEntry">
        <!-- This form allows us to check a user's key press. We're intrested to see if the user has
        reached a termination rule - either a specified termination key or we matched a particular digit
        or the user entered the max number of allowed digits -->
        <block>
            <log>INFO: Entered checkEntry</log>
        </block>
        <!-- We use the object below to set the 'timeout' property whenever we come into this
        form. This creates the effect of having a consistent inter digit timeout. We only need
        to set it once since its value is the same everytime. Doing this however means we have
        to create a flag and check that flag everytime. Pick your poison. -->
	    <object name="Dgt2" classid="com.iivip.setproperty">
            <param name="PropertyName" value="timeout"/>
            <param name="PropertyValue" expr="DGT_TIMEOUT"/>
            <param name="PropertyScope" value="Document"/>
        </object>
        <block cond="HOT_KEY.length &gt; 0">
            <!-- If we've been given a particular key to match, we'll check for that only on the
            first key press. A match will cause us to exit -->
            <if cond="application.lastresult$.utterance != FLD_TERMCHAR">
                <assign name="userEntry" expr="application.lastresult$.utterance"/>
                <if cond="inString(userEntry,HOT_KEY,',')">
                    <!-- Found a match on the first key press -->
                <else/>
                    <assign name="playAudio" expr="'n'"/>
                    <assign name="HOT_KEY" expr="''"/>
                    <assign name="gotoForm" expr="'#exit'"/>
                    <goto next="#getEntry"/>
                </if>
            </if>
            <goto next="#exit"/> <!-- We have matched a specified digit or user pressed term key -->
        </block>
        <block>
            <!-- Subsequent key presses are handled in this block. We'll exit if the user presses
            the specified termination key or enters the max allowed number of keys -->
            <if cond="application.lastresult$.utterance != FLD_TERMCHAR">
                <assign name="userEntry" expr="userEntry + application.lastresult$.utterance"/>
                <if cond="userEntry.length != fieldLength">
                    <assign name="playAudio" expr="'n'"/>
                    <assign name="gotoForm" expr="'#exit'"/>
                    <goto next="#getEntry"/>
                </if>
            </if>
            <goto next="#exit"/> <!-- We have max allowed input or user pressed term key -->
        </block>
    </form>

    <form id="exit">
        <block>
            <log>INFO: User entry [<value expr="userEntry"/>]</log>
            <return namelist="userEntry"/>
        </block>
    </form>

    <catch event="connection.disconnect.hangup">
        <log>INFO: Got a hang up in vxml</log>
        <assign name="userEntry" expr="'hangup'"/>
        <return namelist="userEntry"/>
    </catch>
</vxml>
