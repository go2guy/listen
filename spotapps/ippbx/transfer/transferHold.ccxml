<?xml version="1.0"?>
<!DOCTYPE ccxml PUBLIC '-//W3C/DTD CCXML 1.0//EN' "http://www.w3.org/TR/ccxml/ccxml.dtd">
<ccxml version="1.0">
    <!-- Last Modified 09/28/2011
       *   @Name	transferHold.ccxml
       *   @Desc	This script handles the logic for transferring a party
                    that's currently on hold to a new call -->
    <!-- Exports from Spotbuild project -->
    <var name="II_SB_VXML_LIB"/>        <!-- VXML Lib path -->
    <var name="II_SB_status"/>          <!-- status. This variable is used for application control -->
    <var name="II_SB_local"/>           <!-- Dialed ID -->
    <var name="II_SB_remote"/>          <!-- Origination ID -->
    <var name="II_SB_originator"/>      <!-- Call originator -->
    <var name="II_SB_protocol"/>        <!-- Call protocol -->
    <var name="II_SB_connectionID"/>    <!-- II_SB_connectionID. Contains the ID of the connection for this call -->
    <var name="II_SB_type"/>            <!-- II_SB_type.Contains the type of call - VOIP, PSTN -->
    <var name="II_SB_ibcallid"/>        <!-- ibcallid. In bound connection id -->
    <var name="II_SB_transfer"/>        <!-- transfer. Determins if this call is a transfer from another program -->
    <var name="II_SB_projectSource"/>   <!-- projectSource. -->
    <var name="II_SB_obcallid"/>        <!-- obcallid. Out bound connection id -->
    <var name="II_SB_CODE_DIR"/>        <!-- CODE_DIR. Application directory under base directory. Contains all code -->
    <var name="II_SB_line"/>            <!-- Line number processing call -->


    <!-- Values passed in from other ccxml -->
    <var name="ANI"/>           <!-- ANI. Origination ID of current call -->
    <var name="DNIS"/>          <!-- DNIS. Destination ID -->
    <var name="tmpANI"/>        <!-- ANI.-->
    <var name="tmpDNIS"/>       <!-- DNIS.-->
    <var name="ibconnid"/>      <!-- Inbound connection ID -->
    <var name="obconnid"/>      <!-- Outbound connection ID -->
    <var name="APP_PATH"/>      <!-- App Path. Base application directory -->
    <var name="EXT_LENGTH"/>    <!-- Extensions are less than seven digit numbers -->
    <var name="SB_PATH"/>       <!-- Spotbuild Path. Base directory for spotbuild -->
    <var name="importedValue"/> <!-- Imported Value. Values passed in from Listen application -->
    <var name="callType"/>

    <!-- Global Vars -->
    <var name="state" expr="'idle'"/>   <!-- State. Used to track which state a transition is in -->
    <var name="record" expr="''"/>
    <var name="callResult" expr="'Call pickup failed'"/>
    <var name="dialogID" expr="''"/>    <!-- Dialog ID. Stores value of last VXML dialog that was started -->
    <var name="TRANS_PATH" expr="''"/>  <!-- Transactions Path. Directory for transaction files -->
    <var name="inVXML" expr="'n'"/>     <!-- In VXML. Determines if this session is currently running a vxml dialog -->
    <var name="LINE_NUMBER" expr="''"/>
    <var name="LIB_PATH" expr="''"/>        <!-- Lib Path. Direcotry for lib files -->
    <var name="AUDIO_PATH" expr="''"/>      <!-- Audio Path. Directory for audio files -->
    <var name="startTime"/>
    <var name="endTime"/>
    <var name="DB_PATH" expr="'http://localhost/ippbx/'"/>
    <var name="logFile" expr="'file:/interact/logs/exceptionLog'"/>
    <script src="file:/interact/apps/spotbuild/lib/js/lib.js"/>    <!-- Location of Java script file -->

    <script>
        <![CDATA[
            function cdrParams(startTime, endTime, callType, ANI, DNIS, callResult, organization) {
                var duration = endTime - startTime;
                if(endTime == '0')
                    duration = '0';
                if(ANI.length == 0)
                    ANI = 'Anonymous Caller';
                return "{\"date\": \""+iiDateToISO(startTime)+"\", \"service\": \""+callType+"\", \"duration\":"+duration+", \"ani\":\""+ANI+"\", \"dnis\":\""+DNIS+"\", \"result\":\""+callResult+"\", \"organization\": {\"href\":\""+organization+"\"}}";
            }
        ]]>
    </script>

    <eventprocessor statevariable="state">  <!-- Here is where executable code begins -->
        <transition state="idle" event="ccxml.loaded" name="evt">
            <!-- Load ccxml document. Set variables -->
            <log>INFO: Entered [ccxml.loaded] with state [<value expr="state"/>]</log>
            <log target="status">Transfer Call</log>
            <assign name="state" expr="'loaded'"/>
            <assign name="LIB_PATH" expr="SB_PATH+'lib/vxml/'"/>
            <assign name="AUDIO_PATH" expr="APP_PATH+'audio/'"/>
            <assign name="TRANS_PATH" expr="APP_PATH+'transactions/'"/>
            <assign name="tmpDNIS" expr="getNextElement(1,tmpDNIS,'#9')"/>
            <assign name="LINE_NUMBER" expr="getNextElement(0,session.id,'.')"/>
            <if cond="startTime == undefined">
                <assign name="startTime" expr="getTimeStamp(3)"/>
                <assign name="endTime" expr="startTime"/>
            </if>
            <send data="'dialog.user.getInfo'" target="session.id"/>
        </transition>

		<transition event="dialog.user.getInfo" name="evt">
            <!-- In here, we query the db for the session id of the caller who is on hold -->
            <log>INFO: Entered [dialog.user.getInfo] with state [<value expr="state"/>]</log>
            <assign name="state" expr="'dbInfo'"/>
            <var name="flag" expr="'select'"/>
            <assign name="record" expr="ibconnid + '|' + tmpDNIS"/>
   	   		<dialogstart src="'file:'+TRANS_PATH+'dbCall.vxml'" namelist="flag record EXT_LENGTH"/>
		</transition>

        <transition state="dbInfo" event="dialog.exit" name="evt">
            <!-- Back from getting the session id --> 
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <var name="holdSID" expr="evt.values.result"/>
            <if cond="((holdSID.length != 0) &amp;&amp; (holdSID != undefined) &amp;&amp; (holdSID != 'Failure'))">
                <var name="requestToID" expr="tmpDNIS"/>
                <var name="requestFromID" expr="tmpANI"/>
                <if cond="requestToID.length == 0">
                    <var name="requestToID" expr="'Anonymous Caller'"/>
                </if>
                <if cond="requestFromID.length == 0">
                    <var name="requestFromID" expr="'Anonymous Caller'"/>
                </if>
                <var name="moveRequestSID" expr="session.id"/>  <!-- Save off current session id for future use -->
                <!-- This send event below should end up in either dial.ccxml or hold.ccxml; 
                depending on when the "pick up" is attempted -->
                <send data="'dialog.user.moveRequest'" target="holdSID" namelist="moveRequestSID requestToID requestFromID"/>
            <else/>
                <!-- Looks like we had some issues. End this call. -->
                <send data="'dialog.user.playErrorMessage'" target="session.id"/>
            </if>
        </transition>

        <transition event="dialog.user.playErrorMessage">
            <log>INFO: Entered [dialog.user.playErrorMessage] with state [<value expr="state"/>]</log>
            <var name="logText" expr="'transferHold.ccxml: Transfer failed. ['+ tmpANI +'] was attempting call pick up from ['+ tmpDNIS + ']'"/>
            <assign name="logText" expr="writeLog('IPPBX',LINE_NUMBER,logText)"/>
            <log target="logFile"><value expr="logText"/></log>
            <log target="status">Transfer Failed</log>
            <assign name="state" expr="'playErrorMsg'"/>
            <var name="II_SB_repeat" expr="'n'"/>
            <var name="II_SB_interval" expr="''"/>
            <assign name="II_SB_promptID" expr="AUDIO_PATH+'serviceError2.00.wav ' + AUDIO_PATH + 'notifyAdmin.00.wav ' +  AUDIO_PATH+'thankYou.00.wav ' + AUDIO_PATH + 'goodbye.00.wav'"/>
            <dialogstart src="'file:'+LIB_PATH+'audioPlayBack.vxml'" namelist="II_SB_promptID II_SB_repeat II_SB_interval"/>
        </transition>

        <transition state="playErrorMsg" event="dialog.exit">
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <var name="dltAniRecord" expr="'true'"/>
            <var name="dltDnisRecord" expr="'false'"/>
            <send data="'dialog.user.updateClientRecord'" target="session.id" namelist="dltAniRecord dltDnisRecord"/>
        </transition>

        <transition event="dialog.user.moveSuccessful" name="evt">
            <!-- Our move was successful. Next, we'll join the connection ids of the two parties -->
            <log>INFO: Entered [dialog.user.moveSuccessful] with state [<value expr="state"/>]</log>
    	    <assign name="state" expr="'joinID'"/>
            <var name="currentANI" expr="ANI"/>
            <var name="currentTmpANI" expr="tmpANI"/>
            <var name="currentIbconnid" expr="ibconnid"/>
            <assign name="ANI" expr="evt.ANI"/>
            <assign name="tmpANI" expr="evt.tmpANI"/>
            <assign name="ibconnid" expr="evt.ibconnid"/>
            <assign name="DNIS" expr="currentANI"/>
            <assign name="tmpDNIS" expr="currentTmpANI"/>
            <assign name="obconnid" expr="currentIbconnid"/>
            <join id1="ibconnid" id2="obconnid"/>
        </transition>

		<transition state="joinID" event="conference.joined" name="evt">
            <!-- The join was successful. Here, we send control to dial.ccxml -->
            <log>INFO: Entered [conference.joined] with state [<value expr="state"/>]</log>
            <var name="callType" expr="'fromXfer'"/>
            <fetch next="'file:'+APP_PATH+'dial.ccxml'" namelist="SB_PATH importedValue APP_PATH EXT_LENGTH ibconnid obconnid tmpDNIS DNIS tmpANI ANI callType II_SB_line II_SB_CODE_DIR II_SB_ibcallid II_SB_obcallid II_SB_projectSource II_SB_transfer II_SB_VXML_LIB II_SB_status II_SB_local II_SB_remote II_SB_originator II_SB_protocol II_SB_connectionID II_SB_type"/>
		</transition>

        <transition event="dialog.user.moveFailed" name="evt">
            <!-- Our move failed. Play error and end this call -->
            <log>INFO: Entered [dialog.user.moveFailed] with state [<value expr="state"/>]</log>
            <send data="'dialog.user.playErrorMessage'" target="session.id"/>
        </transition>

        <transition event="connection.disconnected" name="evt">
            <!-- Got a hang up. Let's remove any records associated with this call in the db -->
            <log>INFO: Entered [connection.disconnected] with state [<value expr="state"/>]</log>
            <log>INFO: Detected hangup</log>
    	    <assign name="state" expr="'endCall'"/>
            <var name="dltAniRecord" expr="'true'"/>
            <var name="dltDnisRecord" expr="'false'"/>
            <if cond="obconnid != undefined">
                <assign name="dltDnisRecord" expr="'true'"/>
            </if>
            <send data="'dialog.user.updateClientRecord'" target="session.id" namelist="dltAniRecord dltDnisRecord"/>
        </transition>

        <transition event="dialog.user.updateClientRecord" name="evt">
            <!-- Here, we update the client status in the database -->
            <log>INFO: Entered [dialog.user.updateClientRecord] with state [<value expr="state"/>]</log>
            <var name="maxTime" expr="''"/>
            <var name="id" expr="obconnid"/>
            <var name="sessionID" expr="''"/>
            <var name="flag" expr="'delete'"/>
            <var name="extension" expr="tmpDNIS"/>
            <if cond="((tmpDNIS.length &lt; EXT_LENGTH) &amp;&amp; (evt.dltDnisRecord == 'true'))">
                <send data="'updateClient'" target="DB_PATH+'activeClients.php'" targettype="'basichttp'" namelist="extension id flag sessionID maxTime"/>
            </if>
            <if cond="((tmpANI.length &lt; EXT_LENGTH)  &amp;&amp; (evt.dltAniRecord == 'true'))">
                <assign name="id" expr="ibconnid"/>
                <assign name="extension" expr="tmpANI"/>
                <send data="'updateClient'" target="DB_PATH+'activeClients.php'" targettype="'basichttp'" namelist="extension id flag sessionID maxTime" delay="'250ms'"/>
            </if>
            <send data="'dialog.user.writeCDR'" target="session.id" delay="'500ms'"/>
            <send data="'dialog.user.endCall'" target="session.id" delay="'750ms'"/>
        </transition>

        <transition event="dialog.user.writeCDR" name="evt">
            <!-- Write Call History and Stat -->
            <log>INFO: Entered [dialog.user.writeCDR] with state [<value expr="state"/>]</log>
            <var name="request" expr="'post'"/>
            <var name="resource" expr="'addCallHistory'"/>
            <var name="cntrlURL" expr="getJsonVal(importedValue, 'cntrlURL')"/>
            <var name="organization" expr="getJsonVal(importedValue, 'organization')"/>
            <var name="params" expr="cdrParams(startTime, endTime, callType, tmpANI, tmpDNIS, callResult, organization)"/>
            <send data="'cdrInfo'" target="getJsonVal(importedValue,'HTTPcontroller')" targettype="'basichttp'" namelist="fromCCXML cntrlURL request resource params"/>
        </transition>

        <transition event="dialog.exit" name="evt">
            <log>INFO: Entered [dialog.exit] with state [<value expr="state"/>]</log>
            <send data="'dialog.user.endCall'" target="session.id" />
        </transition>

        <transition event="dialog.started" name="evt">
            <log>INFO: Entered [dialog.started] with state [<value expr="state"/>]</log>
            <assign name="dialogID" expr="evt.dialogid"/>
            <assign name="inVXML" expr="'y'"/>
        </transition>

        <transition event="dialog.user.terminate" name="evt">
            <log>INFO: Entered [dialog.user.terminate] with state [<value expr="state"/>]</log>
   	    	<dialogterminate dialogid="dialogID" immediate="true"/>
        </transition>

        <transition event="fetch.done" name="evt">
            <log>INFO: Fetched document [<value expr="evt.uri"/>]</log>
            <goto fetchid="evt.fetchid" />
        </transition>

        <transition event="error.send.failed" name="evt" cond="evt.reason == 200">
            <!-- Ignore this error -->
        </transition>

        <transition event="error.*" name="evt">
            <!-- Use catch all error for now -->
            <log>ERROR: Entered [Error*] with state [<value expr="state"/>]</log>
            <log>INFO: Reason [<value expr="evt.reason"/>]</log>
            <assign name="state" expr="'errorEnd'"/>
            <send data="'dialog.user.playErrorMessage'" target="session.id"/>
        </transition>

        <transition event="dialog.user.endCall" name="evt">
            <!-- Exit CCXML session -->
            <log>INFO: Entered [dialog.user.endCall] with state [<value expr="state"/>]</log>
            <exit/>
        </transition>

	</eventprocessor>
</ccxml>
