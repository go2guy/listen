<?xml version="1.0"?>
<!DOCTYPE ccxml PUBLIC '-//W3C/DTD CCXML 1.0//EN' "http://www.w3.org/TR/ccxml/ccxml.dtd">
<ccxml version="1.0">
    <!-- Last Modified 09/21/2011
       *   @Name	blindTransfer.ccxml
       *   @Desc	This script handles the logic for doing a blind call transfer -->

    <!-- Exports from Spotbuild project -->
    <var name="II_SB_VXML_LIB"/>        <!-- VXML Lib path -->
    <var name="II_SB_status"/>          <!-- status. This variable is used for application control -->
    <var name="II_SB_local"/>           <!-- Dialed ID -->
    <var name="II_SB_remote"/>          <!-- Origination ID -->
    <var name="II_SB_originator"/>      <!-- Call originator -->
    <var name="II_SB_protocol"/>        <!-- Call protocol -->
    <var name="II_SB_connectionID"/>    <!-- II_SB_connectionID. Contains the ID of the connection for this call -->
    <var name="II_SB_type"/>            <!-- II_SB_type.Contains the type of call - VOIP, PSTN -->
    <var name="II_SB_ibcallid"/>        <!-- ibcallid. In bound connection id -->
    <var name="II_SB_transfer"/>        <!-- transfer. Determins if this call is a transfer from another program -->
    <var name="II_SB_projectSource"/>   <!-- projectSource. -->
    <var name="II_SB_obcallid"/>        <!-- obcallid. Out bound connection id -->
    <var name="II_SB_CODE_DIR"/>        <!-- CODE_DIR. Application directory under base directory. Contains all code -->
    <var name="II_SB_line"/>            <!-- Line number processing call -->

    <!-- Values passed in from other ccxml -->
    <var name="ANI"/>           <!-- ANI. Origination ID of current call -->
    <var name="DNIS"/>          <!-- DNIS. Destination ID -->
    <var name="tmpANI"/>        <!-- ANI.-->
    <var name="tmpDNIS"/>       <!-- DNIS.-->
    <var name="ibconnid"/>      <!-- Inbound connection ID -->
    <var name="obconnid"/>      <!-- Outbound connection ID -->
    <var name="URI"/>           <!-- URI. Destination of blind transfer -->
    <var name="APP_PATH"/>      <!-- App Path. Base application directory -->
    <var name="xferConnID"/>
    <var name="EXT_LENGTH"/>    <!-- Extensions are less than seven digit numbers -->
    <var name="SB_PATH"/>       <!-- Spotbuild Path. Base directory for spotbuild -->
    <var name="importedValue"/> <!-- Imported Value. Values passed in from Listen application -->
    <var name="origDNIS"/>      <!-- Stores the original DNIS in a forwarded scenario -->

    <!-- Global Vars -->
    <var name="state" expr="'idle'"/>   <!-- State. Used to track which state a transition is in -->
    <var name="record" expr="''"/>
    <var name="inVXML" expr="'n'"/>     <!-- In VXML. Determines if this session is currently running a vxml dialog -->
    <var name="dialogID" expr="''"/>    <!-- Dialog ID. Stores value of last VXML dialog that was started -->
    <var name="TRANS_PATH" expr="''"/>  <!-- Transactions Path. Directory for transaction files -->
    <var name="blindXferID" expr="''"/> <!-- Blind Tranfer ID. ID involved in a blind transfer -->
    <var name="LINE_NUMBER" expr="''"/>
    <var name="startTime" expr="getTimeStamp(3)"/>
    <var name="endTime" expr="startTime"/>
    <var name="callResult" expr="'Call Answered'"/>
    <var name="maxTime" expr="''"/>
    <var name="id" expr="''"/>
    <var name="request" expr="'post'"/>
    <var name="sessionID" expr="''"/>
    <var name="flag" expr="'delete'"/>
    <var name="extension" expr="''"/>
    <var name="DB_PATH" expr="'http://localhost/ippbx/'"/>
    <var name="logFile" expr="'file:/interact/logs/exceptionLog'"/>
    <script src="file:/interact/apps/spotbuild/lib/js/lib.js"/>    <!-- Location of Java script file -->

    <script src="file:/interact/apps/spotbuild/lib/js/lib.js"/>    <!-- Location of Java script file -->
    <script src="file:/interact/apps/spotbuild/lib/js/stringify.js"/>    <!-- Location of Java script file -->

    <script>
        <![CDATA[
            function callInfoParams (SID, ani, dnis) {
                if ((ani.length > 0) && (dnis.length > 0))
                    return "{\"ani\":\""+ ani +"\", \"dnis\":\""+ dnis +"\", \"sessionId\":\""+ SID + "\"}";
                else
                    return "{\"sessionId\":\""+ SID + "\"}";
            }

            function cdrParams(startTime, endTime, callType, ANI, DNIS, callResult, organization) {
                var duration = endTime - startTime;
                if(endTime == '0')
                    duration = '0';
                return "{\"date\": \""+iiDateToISO(startTime)+"\", \"service\": \""+callType+"\", \"duration\":"+duration+", \"ani\":\""+ANI+"\", \"dnis\":\""+DNIS+"\", \"result\":\""+callResult+"\", \"organization\": {\"href\":\""+organization+"\"}}";
            }
        ]]>
    </script>

    <eventprocessor statevariable="state">  <!-- Here is where executable code begins -->
        <transition state="idle" event="ccxml.loaded" name="evt">
            <!-- Load ccxml document. Set variables -->
            <log>INFO: Entered [ccxml.loaded] with state [<value expr="state"/>]</log>
            <assign name="state" expr="'loaded'"/>
            <assign name="TRANS_PATH" expr="APP_PATH+'transactions/'"/>
            <log target="status">Blind transfer signal</log>
            <assign name="LINE_NUMBER" expr="getNextElement(0,session.id,'.')"/>
            <send data="'dialog.user.blindTransfer'" target="session.id"/>
        </transition>

		<transition event="dialog.user.blindTransfer" name="evt">
            <!-- In here, we figure out which caller initiated the blind transfer. This caller will be disconnected. -->
            <log>INFO: Entered [dialog.user.blindTransfer] with state [<value expr="state"/>]</log>
            <var name="whichID" expr="''"/>
            <assign name="id" expr="xferConnID"/>           <!-- Save connection ID, we'll end this connection -->
            <if cond="ibconnid == xferConnID">  <!-- Inbound (caller) initiated blind transfer -->
                <assign name="ibconnid" expr="obconnid"/>   <!-- Make outbound connection ID the new inbound connection ID -->
                <assign name="blindXferID" expr="ANI"/>     <!-- Save off current origination number for future use -->
            <else/> <!-- Outbound (callee) initiated blind transfer -->
                <assign name="blindXferID" expr="DNIS"/>    <!-- Save off current destination number for future use -->
            </if>
            <log>LADI: ANI [<value expr="ANI"/>]</log>
    	    <assign name="state" expr="'disconnectXfer'"/>
			<disconnect connectionid="id"/> <!-- Disconnect caller -->
		</transition>

        <transition event="connection.disconnected" name="evt">
            <!-- Got a hang up. Let's remove any records associated with this call in the db -->
            <log>INFO: Entered [connection.disconnected] with state [<value expr="state"/>]</log>
            <log>INFO: Detected hangup</log>
            <var name="dltAniRecord" expr="'false'"/>
            <var name="dltDnisRecord" expr="'false'"/>
            <if cond="state == 'disconnectXfer'">
                <if cond="blindXferID == ANI">
                    <assign name="dltAniRecord" expr="'true'"/>
                <else/>
                    <assign name="dltDnisRecord" expr="'true'"/>
                </if>
                <assign name="state" expr="'joinVC'"/>
                <send data="'dialog.user.joinVC'" target="session.id" delay="'500ms'"/>
            <else/>
                <assign name="dltAniRecord" expr="'true'"/>
                <assign name="dltDnisRecord" expr="'true'"/>
                <send data="'dialog.user.endCall'" target="session.id" delay="'750ms'"/>
            </if>
            <log>LADI: ANI2 [<value expr="ANI"/>]</log>
            <var name="resource" expr="'endCall'"/>
            <assign name="endTime" expr="getTimeStamp(3)"/>
            <var name="params" expr="callInfoParams(session.id, '', '')"/>
            <assign name="callResult" expr="callResult + ': Blind Transfer to ' + getnum(URI)"/>
            <send data="'dialog.user.callInfo'" target="session.id" namelist="params resource"/>
            <send data="'dialog.user.deleteRecord'" target="session.id" namelist="dltAniRecord dltDnisRecord"/>
        </transition>

		<transition event="dialog.user.joinVC" name="evt">
            <!-- Here, we join the remaining caller to a voice channel -->
            <log>INFO: Entered [dialog.user.joinVC] with state [<value expr="state"/>]</log>
            <join id1="ibconnid" id2="'VXML_CHANNEL'"/>
		</transition>

        <transition state="joinVC" event="conference.joined">
            <!-- Our join attempt was successful. Next, we'll perform the actuall transfer -->
            <log>INFO: Entered [conference.joined] with state [<value expr="state"/>]</log>
            <assign name="state" expr="'transfer'"/>
            <var name="callType" expr="'external'"/>
            <if cond="blindXferID == ANI">          <!-- If the original caller initiated the transfer -->
                <assign name="ANI" expr="DNIS"/>    <!-- Make the called party the new originator -->
                <assign name="tmpANI" expr="getnum(ANI)"/>
            </if>
            <assign name="DNIS" expr="URI"/>        <!-- Set new destination number -->
            <assign name="tmpDNIS" expr="URI"/>
            <if cond="!(iiNumber(URI))">
                <assign name="tmpDNIS" expr="getnum(URI)"/>
            </if>
          	<assign name="importedValue" expr="extendJsonObject(importedValue, 'toExt', tmpDNIS)"/>
            <if cond="tmpDNIS.length &lt; EXT_LENGTH">
                <assign name="callType" expr="'extension'"/>
            </if>
            <log>LADI: ANI3 [<value expr="ANI"/>]</log>
            <fetch next="'file:'+APP_PATH+'dial.ccxml'" namelist="SB_PATH APP_PATH EXT_LENGTH ibconnid origDNIS tmpDNIS DNIS tmpANI ANI callType importedValue II_SB_line II_SB_CODE_DIR II_SB_ibcallid II_SB_obcallid II_SB_projectSource II_SB_transfer II_SB_VXML_LIB II_SB_status II_SB_local II_SB_remote II_SB_originator II_SB_protocol II_SB_connectionID II_SB_type"/>
        </transition>

        <transition event="fetch.done" name="evt">
            <log>INFO: Fetched document [<value expr="evt.uri"/>]</log>
            <goto fetchid="evt.fetchid" />
        </transition>

		<transition event="dialog.user.callInfo" name="evt">
            <!-- Here, we information about the call to the listten controller -->
            <log>INFO: Entered [dialog.user.callInfo] with state [<value expr="state"/>]</log>
            <var name="fromCCXML" expr="'IPPBX'"/>
            <var name="params" expr="evt.params"/>
            <var name="resource" expr="evt.resource"/>
            <var name="cntrlURL" expr="getJsonVal(importedValue, 'cntrlURL')"/>
            <send data="'callInfo'" target="getJsonVal(importedValue,'HTTPcontroller')" targettype="'basichttp'" namelist="fromCCXML cntrlURL request resource params"/>
		</transition>

        <transition event="dialog.user.writeCDR" name="evt">
            <!-- Write Call History and Stat -->
            <log>INFO: Entered [dialog.user.writeCDR] with state [<value expr="state"/>]</log>
            <var name="resource" expr="'addCallHistory'"/>
            <var name="cntrlURL" expr="getJsonVal(importedValue, 'cntrlURL')"/>
            <var name="organization" expr="getJsonVal(importedValue, 'organization')"/>
            <var name="params" expr="cdrParams(startTime, endTime, callType, tmpANI, tmpDNIS, callResult, organization)"/>
            <send data="'cdrInfo'" target="getJsonVal(importedValue,'HTTPcontroller')" targettype="'basichttp'" namelist="fromCCXML cntrlURL request resource params"/>
        </transition>

        <transition event="dialog.user.deleteRecord" name="evt">
            <!-- Here, we update the client status in the database -->
            <log>INFO: Entered [dialog.user.deleteRecord] with state [<value expr="state"/>]</log>
            <assign name="id" expr="obconnid"/>
            <assign name="extension" expr="tmpDNIS"/>
            <if cond="((tmpDNIS.length &lt; EXT_LENGTH) &amp;&amp; (evt.dltDnisRecord == 'true'))">
                <send data="'updateClient'" target="DB_PATH+'activeClients.php'" targettype="'basichttp'" namelist="extension id flag sessionID maxTime"/>
            </if>
            <if cond="((tmpANI.length &lt; EXT_LENGTH)  &amp;&amp; (evt.dltAniRecord == 'true'))">
                <assign name="id" expr="ibconnid"/>
                <assign name="extension" expr="tmpANI"/>
                <send data="'updateClient'" target="DB_PATH+'activeClients.php'" targettype="'basichttp'" namelist="extension id flag sessionID maxTime" delay="'250ms'"/>
            </if>
            <send data="'dialog.user.writeCDR'" target="session.id"/>
        </transition>

        <transition event="error.send.failed" name="evt" cond="evt.reason == 200">
            <!-- Ignore this error -->
        </transition>

        <transition event="error.*" name="evt">
            <!-- Use catch all error for now -->
            <log>ERROR: Entered [Error*] with state [<value expr="state"/>]</log>
            <log>INFO: Reason [<value expr="evt.reason"/>]</log>
            <assign name="state" expr="'errorEnd'"/>
            <var name="logText" expr="'blindTransfer.ccxml: Global error catch. ANI ['+ tmpANI +'] DNIS ['+ tmpDNIS + ']. Reason [' + evt.reason + ']'"/>
            <assign name="logText" expr="writeLog('IPPBX',LINE_NUMBER,logText)"/>
            <assign name="logText" expr="writeLog('IPPBX',LINE_NUMBER,logText)"/>
            <if cond="inVXML == 'y'">
                <send data="'dialog.user.terminate'" target="session.id"/>
            </if>
            <var name="dltAniRecord" expr="'true'"/>
            <var name="dltDnisRecord" expr="'true'"/>
            <send data="'dialog.user.deleteRecord'" target="session.id" namelist="dltAniRecord dltDnisRecord" delay="'250ms'"/>
            <send data="'dialog.user.endCall'" target="session.id" delay="'750ms'"/>
        </transition>

        <transition event="dialog.user.endCall" name="evt">
            <!-- Exit CCXML session -->
            <log>INFO: Entered [dialog.user.endCall] with state [<value expr="state"/>]</log>
            <exit/>
        </transition>

	</eventprocessor>
</ccxml>
