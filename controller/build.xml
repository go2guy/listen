<project name="listen" default="war">
  <property name="target.dir"      value="${basedir}/target"/>
  <property name="deploy.dir"      value="/interact/listen"/>
  <property name="war.staging.dir" value="${target.dir}/staging/war"/>
  <property name="rpm.staging.dir" value="${target.dir}/staging/rpm"/>

  <property name="deploy.version" value="0.2"/>
  <exec outputproperty="deploy.release" executable="svnversion">
    <arg line="-n -c"/>
    <redirector>
      <outputfilterchain>
        <tokenfilter>
          <replaceregex pattern="^[0-9]*:?" replace="" flags="g"/>
        </tokenfilter>
      </outputfilterchain>
    </redirector>
  </exec>

  <target name="clean" description="--> Removes build artifacts created by this script">
    <delete dir="${rpm.staging.dir}" failonerror="false"/>
    <delete failonerror="false">
      <fileset dir="ii_artifacts" includes="**/*.rpm"/>
    </delete>
  </target>

  <target name="test-with-coverage">
    <exec executable="grails" dir="${basedir}/listen">
      <arg value="test-app -coverage -xml"/>
    </exec>
  </target>

  <target name="codenarc">
    <exec executable="grails" dir="${basedir}/listen">
      <arg value="codenarc"/>
    </exec>
  </target>

  <target name="plot">
    <exec executable="grails" dir="${basedir}/listen">
      <arg value="jenkins-plot"/>
    </exec>
  </target>

  <target name="deploy" description="--> Deploys the application">
    <exec executable="grails" dir="${basedir}/listen">
      <arg value="prod executable-war"/>
    </exec>

    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}/logs"/>

    <copy todir="${deploy.dir}/lib" verbose="true">
      <fileset dir="listen/target" includes="*.war"/>
    </copy>
    <copy file="${basedir}/scripts/listen-controller" todir="${deploy.dir}/scripts" verbose="true"/>
  </target>

  <target name="undeploy" description="--> Removes any deployed artifacts">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="-rpmbuild" depends="deploy">

    <exec executable="rpmbuild" failonerror="true">
      <env key="VERSION" value="${deploy.version}"/>
      <env key="RELEASE" value="${deploy.release}"/>
      <env key="TOPDIR" value="${rpm.staging.dir}"/>
      <arg line="-bb --buildroot ${rpm.staging.dir}/BUILD ${basedir}/controller.spec"/>
    </exec>

    <copy todir="ii_artifacts" overwrite="true" flatten="true">
      <fileset dir="${rpm.staging.dir}" includes="**/*.rpm"/>
    </copy>

    <delete dir="${rpm.staging.dir}"/>
  </target>

  <target name="rpm" description="--> Creates rpm">
    <!-- hack to override properties -->
    <antcall target="-rpmbuild">
      <param name="deploy.dir" value="${rpm.staging.dir}/BUILD/interact/listen"/>
    </antcall>
  </target>
</project>
